import java.util.HashMap;

/* Pentagonal numbers are generated by the formula, P_n=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D? 

=> if P(n) = n(3n-1)/2, then P^-1(n) = 1/6 (1+sqrt(24n+1))
*/
public class problem44 {
    public static void main(String args[]) {
        HashMap<Integer, Integer> pentagonalHash = new HashMap<Integer, Integer>();
        for(int j = 1; j < 10000000; j++) {
                pentagonalHash.put(j,getPentagonal(j));
                for(int k = 1; k < j; k++) {
                    if(isPentagonal(pentagonalHash.get(j)+pentagonalHash.get(k)) && isPentagonal(Math.abs(pentagonalHash.get(j)-pentagonalHash.get(k)))) {
                        System.out.println(Math.abs(pentagonalHash.get(j)-pentagonalHash.get(k)));
                    }
                }
            }
        }
    static int getPentagonal(int n) {
        return n*(3*n-1)/2;
    }
    static boolean isPentagonal(double P) {
        double possiblen = (1+Math.sqrt((24*P)+1))/6;
        //check if possibleN is an integer to ensure it is an index of P_n
        return possiblen == Math.ceil(possiblen);
    }
}